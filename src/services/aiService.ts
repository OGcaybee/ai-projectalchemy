
import { toast } from "sonner";
import JSZip from "jszip";

export type ProjectRequirement = {
  projectType: string;
  description: string;
  features: string[];
  techStack: string[];
  projectName?: string;
  themeColor?: string;
  imageUrls?: string[];
};

export type GeneratedProject = {
  id: string;
  name: string;
  description: string;
  codeSnippets: {
    frontend: string;
    backend: string;
  };
  techStack: string[];
  structure: {
    frontend: string[];
    backend: string[];
  };
  previewImageUrl?: string;
  downloadUrl?: string;
};

// We're using a template-based generation approach that doesn't require API keys
const TEMPLATE_BASED_GENERATION = true;

// Generate project based on requirements
export const generateProject = async (requirements: ProjectRequirement): Promise<GeneratedProject> => {
  try {
    toast.info("Starting project generation...");
    
    // If we're using template-based generation (no API calls)
    if (TEMPLATE_BASED_GENERATION) {
      return generateTemplateBasedProject(requirements);
    }
    
    // This is a fallback for if we want to reimplement API-based generation later
    return generateFallbackProject(requirements);
    
  } catch (error) {
    console.error("Error generating project:", error);
    toast.error("Failed to generate project. Please try again later.");
    throw error;
  }
};

// Create a downloadable ZIP file for the project
export const createProjectZip = async (project: GeneratedProject & { cssCode: string }): Promise<string> => {
  try {
    const zip = new JSZip();
    
    // Add HTML file
    zip.file("index.html", project.codeSnippets.frontend);
    
    // Add CSS file
    zip.file("styles.css", project.cssCode);
    
    // Add JavaScript file
    zip.file("script.js", project.codeSnippets.backend);
    
    // Add assets folder
    const assets = zip.folder("assets");
    
    // Add a README file
    zip.file("README.md", generateReadme(project));
    
    // Generate the ZIP file
    const content = await zip.generateAsync({ type: "blob" });
    
    // Create a download URL
    return URL.createObjectURL(content);
  } catch (error) {
    console.error("Error creating project ZIP:", error);
    throw error;
  }
};

// Download the project directly
export const downloadProject = async (project: GeneratedProject): Promise<string> => {
  if (project.downloadUrl) {
    return project.downloadUrl;
  }
  
  throw new Error("Project download URL not available");
};

// Generate README content
const generateReadme = (project: GeneratedProject): string => {
  return `# ${project.name}
  
${project.description}

## Tech Stack
${project.techStack.map(tech => `- ${tech}`).join('\n')}

## Project Structure
${project.structure.frontend.map(file => `- ${file}`).join('\n')}

## Generated by ThynkAI
This project was automatically generated based on your requirements.
`;
};

// Generate a fallback project (for when template generation fails)
const generateFallbackProject = async (requirements: ProjectRequirement): Promise<GeneratedProject> => {
  // Simple fallback project that still gives the user something useful
  return {
    id: `proj-fallback-${Date.now()}`,
    name: requirements.projectName || "Fallback Project",
    description: requirements.description || "A simple starter project",
    codeSnippets: {
      frontend: "<html><body><h1>Hello World</h1></body></html>",
      backend: "console.log('Hello World');"
    },
    techStack: ["HTML", "CSS", "JavaScript"],
    structure: {
      frontend: ["index.html", "styles.css", "script.js"],
      backend: []
    }
  };
};

// Our template-based project generation approach
const generateTemplateBasedProject = async (requirements: ProjectRequirement): Promise<GeneratedProject> => {
  // Simulate API call delay
  await new Promise(resolve => setTimeout(resolve, 1500));
  
  const projectName = requirements.projectName || requirements.projectType || "Generated Project";
  const themeColor = requirements.themeColor || 'default';
  
  // Generate templates based on project type
  const { htmlTemplate, cssTemplate, jsTemplate } = getTemplatesByType(requirements, themeColor);
  
  // Create a project object
  const generatedProject: GeneratedProject = {
    id: `proj-${Date.now()}`,
    name: projectName,
    description: requirements.description || `A ${requirements.projectType} application`,
    codeSnippets: {
      frontend: htmlTemplate,
      backend: jsTemplate
    },
    techStack: [...requirements.techStack],
    structure: {
      frontend: [
        "index.html",
        "styles.css",
        "script.js",
        "assets/"
      ],
      backend: []
    },
    previewImageUrl: requirements.imageUrls && requirements.imageUrls.length > 0 ? requirements.imageUrls[0] : undefined
  };
  
  // Create a downloadable zip file
  try {
    const downloadUrl = await createProjectZip({
      ...generatedProject,
      cssCode: cssTemplate
    });
    
    generatedProject.downloadUrl = downloadUrl;
  } catch (error) {
    console.error("Error creating downloadable ZIP:", error);
  }
  
  toast.success("Project generated successfully!");
  return generatedProject;
};

// Get the appropriate templates based on project type
const getTemplatesByType = (requirements: ProjectRequirement, themeColor: string) => {
  let htmlTemplate = "";
  let cssTemplate = "";
  let jsTemplate = "";
  
  switch (requirements.projectType.toLowerCase()) {
    case "e-commerce":
      htmlTemplate = generateEcommerceHTML(requirements);
      cssTemplate = generateEcommerceCSS(themeColor);
      jsTemplate = generateEcommerceJS(requirements);
      break;
    case "portfolio":
      htmlTemplate = generatePortfolioHTML(requirements);
      cssTemplate = generatePortfolioCSS(themeColor);
      jsTemplate = generatePortfolioJS(requirements);
      break;
    case "blog":
      htmlTemplate = generateBlogHTML(requirements);
      cssTemplate = generateBlogCSS(themeColor);
      jsTemplate = generateBlogJS(requirements);
      break;
    case "dashboard":
      htmlTemplate = generateDashboardHTML(requirements);
      cssTemplate = generateDashboardCSS(themeColor);
      jsTemplate = generateDashboardJS(requirements);
      break;
    default:
      // Default to a landing page
      htmlTemplate = generateLandingPageHTML(requirements);
      cssTemplate = generateLandingPageCSS(themeColor);
      jsTemplate = generateLandingPageJS(requirements);
  }
  
  return { htmlTemplate, cssTemplate, jsTemplate };
};

// Get theme colors based on the theme name
const getThemeColors = (themeName: string) => {
  const themes = {
    default: {
      primary: "#7c3aed",
      secondary: "#6d28d9",
      accent: "#a78bfa"
    },
    green: {
      primary: "#059669",
      secondary: "#047857",
      accent: "#34d399"
    },
    blue: {
      primary: "#2563eb",
      secondary: "#1d4ed8",
      accent: "#60a5fa"
    },
    red: {
      primary: "#dc2626",
      secondary: "#b91c1c",
      accent: "#f87171"
    },
    orange: {
      primary: "#ea580c",
      secondary: "#c2410c",
      accent: "#fb923c"
    },
    pink: {
      primary: "#db2777",
      secondary: "#be185d",
      accent: "#f472b6"
    }
  };
  
  return themes[themeName as keyof typeof themes] || themes.default;
};

// Template generators for different project types
// E-commerce templates
function generateEcommerceHTML(requirements: ProjectRequirement): string {
  const projectName = requirements.projectName || "E-commerce Store";
  const description = requirements.description || "Find the best products for your needs";
  const features = requirements.features || [];
  
  return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectName}</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <h1>${projectName}</h1>
        </div>
        <nav>
          <ul>
            <li><a href="#" class="active">Home</a></li>
            <li><a href="#">Products</a></li>
            <li><a href="#">Categories</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Contact</a></li>
          </ul>
        </nav>
        <div class="header-actions">
          <button class="cart-btn">Cart (0)</button>
          <button class="account-btn">Account</button>
        </div>
      </div>
    </div>
  </header>

  <main>
    <section class="hero">
      <div class="container">
        <div class="hero-content">
          <h2>Welcome to Our Store</h2>
          <p>${description}</p>
          <button class="btn primary">Shop Now</button>
        </div>
      </div>
    </section>

    <section class="featured-products">
      <div class="container">
        <h2 class="section-title">Featured Products</h2>
        <div class="product-grid" id="featured-products">
          <!-- Products will be loaded via JavaScript -->
        </div>
        <button class="btn outline view-all">View All Products</button>
      </div>
    </section>

    <section class="features">
      <div class="container">
        <div class="features-grid">
          <div class="feature">
            <div class="feature-icon">🚚</div>
            <h3>Free Shipping</h3>
            <p>On orders over $50</p>
          </div>
          <div class="feature">
            <div class="feature-icon">🔄</div>
            <h3>Easy Returns</h3>
            <p>30-day return policy</p>
          </div>
          <div class="feature">
            <div class="feature-icon">🔒</div>
            <h3>Secure Checkout</h3>
            <p>Safe & protected</p>
          </div>
          <div class="feature">
            <div class="feature-icon">💬</div>
            <h3>24/7 Support</h3>
            <p>Always here to help</p>
          </div>
        </div>
      </div>
    </section>
    
    ${features.length > 0 ? `
    <section class="custom-features">
      <div class="container">
        <h2 class="section-title">Store Features</h2>
        <div class="custom-features-grid">
          ${features.map(feature => `
            <div class="custom-feature">
              <h3>${feature}</h3>
              <p>Implemented with care for a better shopping experience.</p>
            </div>
          `).join('')}
        </div>
      </div>
    </section>
    ` : ''}
    
    <section class="newsletter">
      <div class="container">
        <div class="newsletter-content">
          <h2>Subscribe to Our Newsletter</h2>
          <p>Get updates on new products and sales</p>
          <form id="newsletter-form">
            <input type="email" placeholder="Your email address" required>
            <button type="submit" class="btn primary">Subscribe</button>
          </form>
        </div>
      </div>
    </section>
  </main>

  <footer>
    <div class="container">
      <div class="footer-content">
        <div class="footer-section">
          <h3>Shop</h3>
          <ul>
            <li><a href="#">All Products</a></li>
            <li><a href="#">New Arrivals</a></li>
            <li><a href="#">Best Sellers</a></li>
            <li><a href="#">Sale Items</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Customer Service</h3>
          <ul>
            <li><a href="#">Contact Us</a></li>
            <li><a href="#">Shipping Policy</a></li>
            <li><a href="#">Returns & Exchanges</a></li>
            <li><a href="#">FAQs</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>About Us</h3>
          <ul>
            <li><a href="#">Our Story</a></li>
            <li><a href="#">Blog</a></li>
            <li><a href="#">Careers</a></li>
            <li><a href="#">Terms & Conditions</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Follow Us</h3>
          <div class="social-links">
            <a href="#" class="social-link">Facebook</a>
            <a href="#" class="social-link">Instagram</a>
            <a href="#" class="social-link">Twitter</a>
            <a href="#" class="social-link">LinkedIn</a>
          </div>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; ${new Date().getFullYear()} ${projectName}. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <script src="script.js"></script>
</body>
</html>`;
}

function generateEcommerceCSS(themeColor: string): string {
  const colors = getThemeColors(themeColor);
  
  return `/* E-commerce Store Styles */
:root {
  --primary-color: ${colors.primary};
  --secondary-color: ${colors.secondary};
  --accent-color: ${colors.accent};
  --text-color: #333;
  --light-gray: #f8f9fa;
  --border-color: #e2e8f0;
  --shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

/* Button styles */
.btn {
  display: inline-block;
  padding: 0.6rem 1.5rem;
  border-radius: 4px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  font-size: 0.95rem;
}

.btn.primary {
  background-color: var(--primary-color);
  color: white;
}

.btn.primary:hover {
  background-color: var(--secondary-color);
}

.btn.outline {
  background-color: transparent;
  border: 1px solid var(--border-color);
  color: var(--text-color);
}

.btn.outline:hover {
  background-color: var(--light-gray);
}

/* Header styles */
header {
  background-color: white;
  box-shadow: var(--shadow);
  position: sticky;
  top: 0;
  z-index: 100;
}

.header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

.logo h1 {
  font-size: 1.5rem;
  color: var(--primary-color);
}

nav ul {
  display: flex;
}

nav ul li {
  margin-right: 1.5rem;
}

nav ul li a {
  position: relative;
  padding-bottom: 5px;
}

nav ul li a.active::after,
nav ul li a:hover::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background-color: var(--primary-color);
}

.header-actions {
  display: flex;
  gap: 1rem;
}

.cart-btn, .account-btn {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.cart-btn {
  background-color: var(--primary-color);
  color: white;
}

.account-btn {
  background-color: var(--light-gray);
  color: var(--text-color);
}

/* Hero section */
.hero {
  background-color: var(--light-gray);
  padding: 4rem 0;
  text-align: center;
}

.hero-content {
  max-width: 600px;
  margin: 0 auto;
}

.hero h2 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.hero p {
  font-size: 1.1rem;
  margin-bottom: 2rem;
  color: #666;
}

/* Product sections */
.featured-products {
  padding: 4rem 0;
}

.section-title {
  font-size: 1.8rem;
  margin-bottom: 2rem;
  text-align: center;
  position: relative;
}

.section-title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 50px;
  height: 3px;
  background-color: var(--primary-color);
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 2rem;
  margin-bottom: 2rem;
}

.product {
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: transform 0.3s ease;
}

.product:hover {
  transform: translateY(-5px);
}

.product-image {
  height: 200px;
  overflow: hidden;
}

.product-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.product-info {
  padding: 1.2rem;
}

.product-info h3 {
  font-size: 1.1rem;
  margin-bottom: 0.5rem;
}

.product-price {
  font-weight: 600;
  color: var(--primary-color);
  margin-bottom: 0.7rem;
}

.product-rating {
  display: flex;
  align-items: center;
  font-size: 0.85rem;
  margin-bottom: 1rem;
}

.add-to-cart {
  width: 100%;
}

.view-all {
  display: block;
  margin: 0 auto;
}

/* Features section */
.features {
  background-color: var(--light-gray);
  padding: 4rem 0;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 2rem;
}

.feature {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  text-align: center;
  box-shadow: var(--shadow);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.feature h3 {
  margin-bottom: 0.5rem;
  font-size: 1.1rem;
}

.feature p {
  color: #666;
  font-size: 0.9rem;
}

/* Custom features section */
.custom-features {
  padding: 4rem 0;
}

.custom-features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
}

.custom-feature {
  background-color: white;
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: var(--shadow);
  border-left: 4px solid var(--primary-color);
}

.custom-feature h3 {
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.custom-feature p {
  color: #666;
  font-size: 0.9rem;
}

/* Newsletter section */
.newsletter {
  background-color: var(--primary-color);
  color: white;
  padding: 4rem 0;
}

.newsletter-content {
  text-align: center;
  max-width: 600px;
  margin: 0 auto;
}

.newsletter-content h2 {
  font-size: 1.8rem;
  margin-bottom: 1rem;
}

.newsletter-content p {
  margin-bottom: 2rem;
  opacity: 0.9;
}

#newsletter-form {
  display: flex;
  max-width: 500px;
  margin: 0 auto;
}

#newsletter-form input {
  flex: 1;
  padding: 0.8rem 1rem;
  border: none;
  border-radius: 4px 0 0 4px;
  font-size: 0.95rem;
}

#newsletter-form button {
  border-radius: 0 4px 4px 0;
  background-color: white;
  color: var(--primary-color);
}

#newsletter-form button:hover {
  background-color: var(--light-gray);
}

/* Footer */
footer {
  background-color: var(--light-gray);
  padding-top: 4rem;
}

.footer-content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
  padding-bottom: 3rem;
}

.footer-section h3 {
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
  position: relative;
  display: inline-block;
}

.footer-section h3::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -5px;
  width: 30px;
  height: 2px;
  background-color: var(--primary-color);
}

.footer-section ul li {
  margin-bottom: 0.7rem;
}

.footer-section ul li a {
  color: #666;
  transition: color 0.3s ease;
}

.footer-section ul li a:hover {
  color: var(--primary-color);
}

.social-links {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.social-link {
  padding: 0.5rem 1rem;
  background-color: white;
  border-radius: 4px;
  color: var(--text-color);
  transition: all 0.3s ease;
}

.social-link:hover {
  background-color: var(--primary-color);
  color: white;
}

.footer-bottom {
  text-align: center;
  padding: 1.5rem 0;
  border-top: 1px solid var(--border-color);
  font-size: 0.9rem;
  color: #666;
}

/* Responsive styles */
@media (max-width: 768px) {
  .header-content {
    height: auto;
    flex-direction: column;
    padding: 1rem 0;
  }
  
  nav {
    margin: 1rem 0;
  }
  
  nav ul {
    flex-wrap: wrap;
    justify-content: center;
  }
  
  nav ul li {
    margin: 0 0.7rem 0.5rem;
  }
  
  .hero {
    padding: 3rem 0;
  }
  
  .hero h2 {
    font-size: 2rem;
  }
  
  #newsletter-form {
    flex-direction: column;
  }
  
  #newsletter-form input {
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  
  #newsletter-form button {
    border-radius: 4px;
    width: 100%;
  }
}`;
}

function generateEcommerceJS(requirements: ProjectRequirement): string {
  return `// E-commerce Store JavaScript

// Sample product data (in a real app, this would come from a backend API)
const products = [
  {
    id: 1,
    name: 'Premium Watch',
    price: 199.99,
    rating: 4,
    reviews: 42,
    image: 'https://images.unsplash.com/photo-1523275335684-37898b6baf30'
  },
  {
    id: 2,
    name: 'Wireless Headphones',
    price: 149.99,
    rating: 5,
    reviews: 107,
    image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e'
  },
  {
    id: 3,
    name: 'Polaroid Camera',
    price: 89.99,
    rating: 4,
    reviews: 56,
    image: 'https://images.unsplash.com/photo-1526170375885-4d8ecf77b99f'
  },
  {
    id: 4,
    name: 'Stylish Sunglasses',
    price: 79.99,
    rating: 4,
    reviews: 38,
    image: 'https://images.unsplash.com/photo-1572635196237-14b3f281503f'
  }
];

// Cart functionality
let cart = [];

// Initialize the store
document.addEventListener('DOMContentLoaded', () => {
  // Display featured products
  displayProducts();
  
  // Set up event listeners
  setupEventListeners();
});

// Display products in the product grid
function displayProducts() {
  const productsContainer = document.getElementById('featured-products');
  
  // If container exists, populate it with products
  if (productsContainer) {
    productsContainer.innerHTML = '';
    
    products.forEach(product => {
      const productElement = createProductElement(product);
      productsContainer.appendChild(productElement);
    });
  }
}

// Create a product element
function createProductElement(product) {
  const productDiv = document.createElement('div');
  productDiv.className = 'product';
  
  // Generate stars for the rating
  let stars = '';
  for (let i = 1; i <= 5; i++) {
    stars += i <= product.rating ? '★' : '☆';
  }
  
  productDiv.innerHTML = \`
    <div class="product-image">
      <img src="\${product.image}" alt="\${product.name}">
    </div>
    <div class="product-info">
      <h3>\${product.name}</h3>
      <p class="product-price">$\${product.price.toFixed(2)}</p>
      <div class="product-rating">
        <span>\${stars}</span>
        <small>(\${product.reviews} reviews)</small>
      </div>
      <button class="btn primary add-to-cart" data-id="\${product.id}">Add to Cart</button>
    </div>
  \`;
  
  return productDiv;
}

// Set up event listeners
function setupEventListeners() {
  // Add to cart buttons
  document.addEventListener('click', (e) => {
    if (e.target.classList.contains('add-to-cart')) {
      const productId = parseInt(e.target.getAttribute('data-id'));
      addToCart(productId);
    }
  });
  
  // Newsletter form
  const newsletterForm = document.getElementById('newsletter-form');
  if (newsletterForm) {
    newsletterForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const emailInput = newsletterForm.querySelector('input[type="email"]');
      if (emailInput && emailInput.value) {
        // In a real app, this would send the email to a backend API
        alert(\`Thank you for subscribing with \${emailInput.value}!\`);
        emailInput.value = '';
      }
    });
  }
}

// Add a product to the cart
function addToCart(productId) {
  const product = products.find(p => p.id === productId);
  
  if (product) {
    // Check if the product is already in the cart
    const existingItem = cart.find(item => item.id === productId);
    
    if (existingItem) {
      existingItem.quantity += 1;
    } else {
      cart.push({
        ...product,
        quantity: 1
      });
    }
    
    // Update cart count in the header
    updateCartCount();
    
    // Show confirmation
    alert(\`\${product.name} added to cart!\`);
  }
}

// Update the cart count in the header
function updateCartCount() {
  const cartBtn = document.querySelector('.cart-btn');
  if (cartBtn) {
    const totalItems = cart.reduce((total, item) => total + item.quantity, 0);
    cartBtn.textContent = \`Cart (\${totalItems})\`;
  }
}

// Sample features implementation
${requirements.features?.length > 0 ? `
// Custom features implementation
const features = ${JSON.stringify(requirements.features)};

features.forEach(feature => {
  console.log(\`Implementing feature: \${feature}\`);
  // In a real app, each feature would have its own implementation
});
` : '// No custom features specified'}

// In a real app, there would be more functionality like:
// - Product filtering and sorting
// - Product details page
// - Checkout process
// - User authentication
// - Order tracking
// etc.`;
}

// Template generators for Portfolio project type
function generatePortfolioHTML(requirements: ProjectRequirement): string {
  const projectName = requirements.projectName || "My Portfolio";
  const description = requirements.description || "Showcasing my work and skills";
  const features = requirements.features || [];
  
  return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectName}</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <h1>${projectName}</h1>
        </div>
        <nav>
          <ul>
            <li><a href="#home" class="active">Home</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#portfolio">Portfolio</a></li>
            <li><a href="#skills">Skills</a></li>
            <li><a href="#contact">Contact</a></li>
          </ul>
        </nav>
        <button class="menu-toggle" id="menu-toggle">
          <span></span>
          <span></span>
          <span></span>
        </button>
      </div>
    </div>
  </header>

  <main>
    <section id="home" class="hero">
      <div class="container">
        <div class="hero-content">
          <h2>Hello, I'm <span class="highlight">Your Name</span></h2>
          <h3>${description}</h3>
          <div class="hero-buttons">
            <a href="#portfolio" class="btn primary">View My Work</a>
            <a href="#contact" class="btn outline">Contact Me</a>
          </div>
        </div>
      </div>
    </section>

    <section id="about" class="about">
      <div class="container">
        <h2 class="section-title">About Me</h2>
        <div class="about-content">
          <div class="about-image">
            <img src="https://via.placeholder.com/400" alt="Profile picture">
          </div>
          <div class="about-text">
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem.</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem.</p>
            <div class="about-buttons">
              <a href="#" class="btn primary">Download Resume</a>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section id="portfolio" class="portfolio">
      <div class="container">
        <h2 class="section-title">My Portfolio</h2>
        <div class="portfolio-filter">
          <button class="filter-btn active" data-filter="all">All</button>
          <button class="filter-btn" data-filter="web">Web Design</button>
          <button class="filter-btn" data-filter="app">App Development</button>
          <button class="filter-btn" data-filter="design">Graphic Design</button>
        </div>
        <div class="portfolio-grid" id="portfolio-grid">
          <!-- Portfolio items will be loaded via JavaScript -->
        </div>
      </div>
    </section>

    <section id="skills" class="skills">
      <div class="container">
        <h2 class="section-title">My Skills</h2>
        <div class="skills-content">
          <div class="skills-text">
            <p>Here are some of the technologies and tools I'm proficient with. I'm always learning and exploring new technologies to stay up-to-date with the latest trends.</p>
          </div>
          <div class="skills-grid">
            <div class="skill">
              <div class="skill-name">HTML/CSS</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 95%"></div>
              </div>
            </div>
            <div class="skill">
              <div class="skill-name">JavaScript</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 90%"></div>
              </div>
            </div>
            <div class="skill">
              <div class="skill-name">React</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 85%"></div>
              </div>
            </div>
            <div class="skill">
              <div class="skill-name">Node.js</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 80%"></div>
              </div>
            </div>
            <div class="skill">
              <div class="skill-name">UI/UX Design</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 75%"></div>
              </div>
            </div>
            <div class="skill">
              <div class="skill-name">Graphic Design</div>
              <div class="skill-bar">
                <div class="skill-level" style="width: 70%"></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
    
    ${features.length > 0 ? `
    <section class="features">
      <div class="container">
        <h2 class="section-title">Key Features</h2>
        <div class="features-grid">
          ${features.map(feature => `
            <div class="feature">
              <h3>${feature}</h3>
              <p>A unique aspect of my work and approach.</p>
            </div>
          `).join('')}
        </div>
      </div>
    </section>
    ` : ''}

    <section id="contact" class="contact">
      <div class="container">
        <h2 class="section-title">Get In Touch</h2>
        <div class="contact-content">
          <div class="contact-info">
            <div class="contact-item">
              <h3>Email</h3>
              <p>your.email@example.com</p>
            </div>
            <div class="contact-item">
              <h3>Phone</h3>
              <p>+1 (123) 456-7890</p>
            </div>
            <div class="contact-item">
              <h3>Location</h3>
              <p>New York, NY</p>
            </div>
            <div class="contact-social">
              <a href="#" class="social-link">LinkedIn</a>
              <a href="#" class="social-link">GitHub</a>
              <a href="#" class="social-link">Twitter</a>
            </div>
          </div>
          <form id="contact-form" class="contact-form">
            <div class="form-group">
              <input type="text" placeholder="Your Name" required>
            </div>
            <div class="form-group">
              <input type="email" placeholder="Your Email" required>
            </div>
            <div class="form-group">
              <input type="text" placeholder="Subject">
            </div>
            <div class="form-group">
              <textarea placeholder="Your Message" rows="5" required></textarea>
            </div>
            <button type="submit" class="btn primary">Send Message</button>
          </form>
        </div>
      </div>
    </section>
  </main>

  <footer>
    <div class="container">
      <p>&copy; ${new Date().getFullYear()} ${projectName}. All rights reserved.</p>
    </div>
  </footer>

  <script src="script.js"></script>
</body>
</html>`;
}

function generatePortfolioCSS(themeColor: string): string {
  const colors = getThemeColors(themeColor);
  
  return `/* Portfolio Styles */
:root {
  --primary-color: ${colors.primary};
  --secondary-color: ${colors.secondary};
  --accent-color: ${colors.accent};
  --text-color: #333;
  --light-gray: #f8f9fa;
  --border-color: #e2e8f0;
  --shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  scroll-behavior: smooth;
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.section-title {
  font-size: 2rem;
  margin-bottom: 3rem;
  text-align: center;
  position: relative;
}

.section-title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 50px;
  height: 3px;
  background-color: var(--primary-color);
}

/* Button styles */
.btn {
  display: inline-block;
  padding: 0.8rem 1.8rem;
  border-radius: 4px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  font-size: 1rem;
}

.btn.primary {
  background-color: var(--primary-color);
  color: white;
}

.btn.primary:hover {
  background-color: var(--secondary-color);
}

.btn.outline {
  background-color: transparent;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
}

.btn.outline:hover {
  background-color: var(--primary-color);
  color: white;
}

/* Header styles */
header {
  background-color: white;
  box-shadow: var(--shadow);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 100;
}

.header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

.logo h1 {
  font-size: 1.5rem;
  color: var(--primary-color);
}

nav ul {
  display: flex;
}

nav ul li {
  margin-left: 1.5rem;
}

nav ul li a {
  position: relative;
  padding-bottom: 5px;
}

nav ul li a.active::after,
nav ul li a:hover::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background-color: var(--primary-color);
}

.menu-toggle {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 30px;
  height: 21px;
  background: transparent;
  border: none;
  cursor: pointer;
}

.menu-toggle span {
  width: 100%;
  height: 3px;
  background-color: var(--text-color);
  transition: all 0.3s ease;
}

/* Hero section */
.hero {
  padding: 10rem 0 5rem;
  background-color: var(--light-gray);
  text-align: center;
}

.hero-content {
  max-width: 800px;
  margin: 0 auto;
}

.hero h2 {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.hero h3 {
  font-size: 1.5rem;
  font-weight: 400;
  color: #666;
  margin-bottom: 2rem;
}

.highlight {
  color: var(--primary-color);
}

.hero-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

/* About section */
.about {
  padding: 5rem 0;
}

.about-content {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 3rem;
}

.about-image img {
  border-radius: 8px;
  box-shadow: var(--shadow);
}

.about-text p {
  margin-bottom: 1.5rem;
}

.about-buttons {
  margin-top: 2rem;
}

/* Portfolio section */
.portfolio {
  padding: 5rem 0;
  background-color: var(--light-gray);
}

.portfolio-filter {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.filter-btn {
  padding: 0.5rem 1rem;
  border: none;
  background: white;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 0.9rem;
}

.filter-btn.active,
.filter-btn:hover {
  background-color: var(--primary-color);
  color: white;
}

.portfolio-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
}

.portfolio-item {
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: var(--shadow);
}

.portfolio-item img {
  width: 100%;
  height: 250px;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.portfolio-item:hover img {
  transform: scale(1.05);
}

.portfolio-overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 1.5rem;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  transform: translateY(100%);
  transition: transform 0.3s ease;
}

.portfolio-item:hover .portfolio-overlay {
  transform: translateY(0);
}

.portfolio-overlay h3 {
  margin-bottom: 0.5rem;
}

.portfolio-buttons {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

/* Skills section */
.skills {
  padding: 5rem 0;
}

.skills-content {
  max-width: 800px;
  margin: 0 auto;
}

.skills-text {
  text-align: center;
  margin-bottom: 3rem;
}

.skills-grid {
  display: grid;
  gap: 2rem;
}

.skill {
  margin-bottom: 1rem;
}

.skill-name {
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.skill-bar {
  height: 10px;
  background-color: var(--light-gray);
  border-radius: 5px;
  overflow: hidden;
}

.skill-level {
  height: 100%;
  background-color: var(--primary-color);
}

/* Features section */
.features {
  padding: 5rem 0;
  background-color: var(--light-gray);
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
}

.feature {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
  text-align: center;
}

.feature h3 {
  color: var(--primary-color);
  margin-bottom: 1rem;
}

/* Contact section */
.contact {
  padding: 5rem 0;
}

.contact-content {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 3rem;
}

.contact-info {
  display: grid;
  gap: 2rem;
}

.contact-item h3 {
  color: var(--primary-color);
  margin-bottom: 0.5rem;
}

.contact-social {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.social-link {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: var(--light-gray);
  border-radius: 4px;
  transition: all 0.3s ease;
}

.social-link:hover {
  background-color: var(--primary-color);
  color: white;
}

.contact-form {
  display: grid;
  gap: 1.5rem;
}

.form-group input,
.form-group textarea {
  width: 100%;
  padding: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-family: inherit;
  font-size: 1rem;
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--primary-color);
}

/* Footer */
footer {
  background-color: var(--light-gray);
  padding: 2rem 0;
  text-align: center;
}

/* Responsive styles */
@media (max-width: 992px) {
  .about-content,
  .contact-content {
    grid-template-columns: 1fr;
  }
  
  .about-image {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .about-image img {
    max-width: 300px;
  }
}

@media (max-width: 768px) {
  nav ul {
    display: none;
  }
  
  .menu-toggle {
    display: flex;
  }
  
  nav.active ul {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 70px;
    left: 0;
    width: 100%;
    background-color: white;
    padding: 1rem 0;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
  }
  
  nav.active ul li {
    margin: 0;
    text-align: center;
  }
  
  nav.active ul li a {
    display: block;
    padding: 0.8rem 0;
  }
  
  .hero h2 {
    font-size: 2.5rem;
  }
  
  .hero h3 {
    font-size: 1.2rem;
  }
  
  .hero-buttons {
    flex-direction: column;
    align-items: center;
  }
  
  .btn {
    width: 100%;
    text-align: center;
    margin-bottom: 0.5rem;
  }
}

@media (max-width: 576px) {
  .section-title {
    font-size: 1.8rem;
  }
  
  .portfolio-grid {
    grid-template-columns: 1fr;
  }
}`;
}

function generatePortfolioJS(requirements: ProjectRequirement): string {
  return `// Portfolio Website JavaScript

// Sample portfolio projects data (in a real app, this could be loaded from a CMS or API)
const portfolioProjects = [
  {
    id: 1,
    title: 'E-commerce Website',
    category: 'web',
    image: 'https://via.placeholder.com/600x400?text=E-commerce+Website',
    description: 'A fully responsive e-commerce website built with modern technologies.'
  },
  {
    id: 2,
    title: 'Mobile App UI Design',
    category: 'design',
    image: 'https://via.placeholder.com/600x400?text=Mobile+App+UI',
    description: 'UI/UX design for a fitness tracking mobile application.'
  },
  {
    id: 3,
    title: 'Portfolio Website',
    category: 'web',
    image: 'https://via.placeholder.com/600x400?text=Portfolio+Website',
    description: 'A personal portfolio website showcasing my work and skills.'
  },
  {
    id: 4,
    title: 'Food Delivery App',
    category: 'app',
    image: 'https://via.placeholder.com/600x400?text=Food+Delivery+App',
    description: 'A food delivery app with real-time tracking and payment integration.'
  },
  {
    id: 5,
    title: 'Brand Identity Design',
    category: 'design',
    image: 'https://via.placeholder.com/600x400?text=Brand+Identity',
    description: 'Complete brand identity design including logo, color scheme, and brand guidelines.'
  },
  {
    id: 6,
    title: 'Weather Dashboard',
    category: 'web',
    image: 'https://via.placeholder.com/600x400?text=Weather+Dashboard',
    description: 'A weather dashboard app that displays current and forecasted weather data.'
  }
];

// Initialize the portfolio
document.addEventListener('DOMContentLoaded', () => {
  // Display portfolio projects
  displayPortfolioProjects('all');
  
  // Set up event listeners
  setupEventListeners();
  
  // Handle navigation highlighting based on scroll position
  setupScrollSpy();
});

// Display portfolio projects
function displayPortfolioProjects(category) {
  const portfolioGrid = document.getElementById('portfolio-grid');
  
  if (portfolioGrid) {
    portfolioGrid.innerHTML = '';
    
    const filteredProjects = category === 'all' 
      ? portfolioProjects 
      : portfolioProjects.filter(project => project.category === category);
    
    filteredProjects.forEach(project => {
      const projectElement = createProjectElement(project);
      portfolioGrid.appendChild(projectElement);
    });
  }
}

// Create a portfolio project element
function createProjectElement(project) {
  const projectDiv = document.createElement('div');
  projectDiv.className = 'portfolio-item';
  
  projectDiv.innerHTML = \`
    <img src="\${project.image}" alt="\${project.title}">
    <div class="portfolio-overlay">
      <h3>\${project.title}</h3>
      <p>\${project.description}</p>
      <div class="portfolio-buttons">
        <a href="#" class="btn primary">View Details</a>
      </div>
    </div>
  \`;
  
  return projectDiv;
}

// Set up event listeners
function setupEventListeners() {
  // Portfolio filter buttons
  const filterBtns = document.querySelectorAll('.filter-btn');
  filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      // Update active state
      filterBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      
      // Filter projects
      const category = btn.getAttribute('data-filter');
      displayPortfolioProjects(category);
    });
  });
  
  // Mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const nav = document.querySelector('nav');
  
  if (menuToggle && nav) {
    menuToggle.addEventListener('click', () => {
      nav.classList.toggle('active');
    });
  }
  
  // Close mobile menu when clicking on a link
  const navLinks = document.querySelectorAll('nav a');
  navLinks.forEach(link => {
    link.addEventListener('click', () => {
      nav.classList.remove('active');
    });
  });
  
  // Contact form submission
  const contactForm = document.getElementById('contact-form');
  if (contactForm) {
    contactForm.addEventListener('submit', (e) => {
      e.preventDefault();
      
      // In a real app, this would send the form data to a backend API
      alert('Thank you for your message! I will get back to you soon.');
      contactForm.reset();
    });
  }
}

// Set up scroll spy for navigation highlighting
function setupScrollSpy() {
  const sections = document.querySelectorAll('section');
  const navLinks = document.querySelectorAll('nav a');
  
  window.addEventListener('scroll', () => {
    let current = '';
    
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;
      
      if (window.pageYOffset >= sectionTop - 200) {
        current = section.getAttribute('id');
      }
    });
    
    navLinks.forEach(link => {
      link.classList.remove('active');
      if (link.getAttribute('href') === \`#\${current}\`) {
        link.classList.add('active');
      }
    });
  });
}

// Smooth scrolling for navigation links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function(e) {
    e.preventDefault();
    
    const targetId = this.getAttribute('href');
    const targetElement = document.querySelector(targetId);
    
    if (targetElement) {
      window.scrollTo({
        top: targetElement.offsetTop - 70, // Account for header height
        behavior: 'smooth'
      });
    }
  });
});

// Implement features based on requirements
${requirements.features?.length > 0 ? `
// Custom features implementation
const features = ${JSON.stringify(requirements.features)};

features.forEach(feature => {
  console.log(\`Implementing portfolio feature: \${feature}\`);
  // In a real app, each feature would have its own implementation
});
` : '// No custom features specified'}`;
}

// Template generators for Blog project type
function generateBlogHTML(requirements: ProjectRequirement): string {
  const projectName = requirements.projectName || "My Blog";
  const description = requirements.description || "Sharing my thoughts and ideas";
  const features = requirements.features || [];
  
  return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectName}</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <h1>${projectName}</h1>
        </div>
        <nav>
          <ul>
            <li><a href="#" class="active">Home</a></li>
            <li><a href="#">Articles</a></li>
            <li><a href="#">Categories</a></li>
            <li><a href="#">About</a></li>
            <li><a href="#">Contact</a></li>
          </ul>
        </nav>
        <div class="header-actions">
          <button class="search-btn">
            <span class="search-icon">🔍</span>
          </button>
          <button class="theme-toggle" id="theme-toggle">
            <span class="light-icon">☀️</span>
            <span class="dark-icon">🌙</span>
          </button>
        </div>
      </div>
    </div>
  </header>

  <main>
    <section class="hero">
      <div class="container">
        <div class="hero-content">
          <h2>${projectName}</h2>
          <p>${description}</p>
        </div>
      </div>
    </section>

    <section class="featured-posts">
      <div class="container">
        <h2 class="section-title">Featured Articles</h2>
        <div class="featured-grid" id="featured-posts">
          <!-- Featured posts will be loaded via JavaScript -->
        </div>
      </div>
    </section>

    <section class="recent-posts">
      <div class="container">
        <div class="posts-header">
          <h2 class="section-title">Recent Posts</h2>
          <div class="posts-filter">
            <button class="filter-btn active" data-category="all">All</button>
            <button class="filter-btn" data-category="technology">Technology</button>
            <button class="filter-btn" data-category="lifestyle">Lifestyle</button>
            <button class="filter-btn" data-category="travel">Travel</button>
          </div>
        </div>
        <div class="posts-grid" id="recent-posts">
          <!-- Recent posts will be loaded via JavaScript -->
        </div>
        <div class="pagination">
          <button class="pagination-btn" data-page="prev">Previous</button>
          <div class="pagination-numbers">
            <span class="page-number active">1</span>
            <span class="page-number">2</span>
            <span class="page-number">3</span>
          </div>
          <button class="pagination-btn" data-page="next">Next</button>
        </div>
      </div>
    </section>
    
    ${features.length > 0 ? `
    <section class="blog-features">
      <div class="container">
        <h2 class="section-title">Blog Features</h2>
        <div class="features-grid">
          ${features.map(feature => `
            <div class="feature">
              <h3>${feature}</h3>
              <p>Enhancing your reading experience.</p>
            </div>
          `).join('')}
        </div>
      </div>
    </section>
    ` : ''}

    <section class="newsletter">
      <div class="container">
        <div class="newsletter-content">
          <h2>Subscribe to Our Newsletter</h2>
          <p>Get notified when new articles are published</p>
          <form id="newsletter-form">
            <input type="email" placeholder="Your email address" required>
            <button type="submit">Subscribe</button>
          </form>
        </div>
      </div>
    </section>
  </main>

  <footer>
    <div class="container">
      <div class="footer-content">
        <div class="footer-section">
          <h3>Categories</h3>
          <ul>
            <li><a href="#">Technology</a></li>
            <li><a href="#">Lifestyle</a></li>
            <li><a href="#">Travel</a></li>
            <li><a href="#">Food</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Quick Links</h3>
          <ul>
            <li><a href="#">About Us</a></li>
            <li><a href="#">Contact</a></li>
            <li><a href="#">Privacy Policy</a></li>
            <li><a href="#">Terms of Service</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Follow Us</h3>
          <div class="social-links">
            <a href="#" class="social-link">Facebook</a>
            <a href="#" class="social-link">Twitter</a>
            <a href="#" class="social-link">Instagram</a>
            <a href="#" class="social-link">LinkedIn</a>
          </div>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; ${new Date().getFullYear()} ${projectName}. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <script src="script.js"></script>
</body>
</html>`;
}

function generateBlogCSS(themeColor: string): string {
  const colors = getThemeColors(themeColor);
  
  return `/* Blog Styles */
:root {
  --primary-color: ${colors.primary};
  --secondary-color: ${colors.secondary};
  --accent-color: ${colors.accent};
  --text-color: #333;
  --text-light: #666;
  --background: #fff;
  --background-alt: #f8f9fa;
  --border-color: #e2e8f0;
  --shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.dark-theme {
  --text-color: #f8f9fa;
  --text-light: #ced4da;
  --background: #1a1a1a;
  --background-alt: #2d2d2d;
  --border-color: #444;
  --shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--background);
  transition: background-color 0.3s ease, color 0.3s ease;
}

a {
  text-decoration: none;
  color: var(--primary-color);
  transition: color 0.3s ease;
}

a:hover {
  color: var(--secondary-color);
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.section-title {
  font-size: 1.8rem;
  margin-bottom: 2rem;
  position: relative;
}

.section-title::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 50px;
  height: 3px;
  background-color: var(--primary-color);
}

button {
  cursor: pointer;
  font-family: inherit;
}

/* Header styles */
header {
  background-color: var(--background);
  box-shadow: var(--shadow);
  position: sticky;
  top: 0;
  z-index: 100;
}

.header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

.logo h1 {
  font-size: 1.5rem;
  color: var(--primary-color);
}

nav ul {
  display: flex;
}

nav ul li {
  margin-right: 1.5rem;
}

nav ul li a {
  position: relative;
  padding-bottom: 5px;
  color: var(--text-color);
}

nav ul li a.active::after,
nav ul li a:hover::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background-color: var(--primary-color);
}

.header-actions {
  display: flex;
  gap: 1rem;
}

.search-btn, .theme-toggle {
  background: none;
  border: none;
  font-size: 1.2rem;
  color: var(--text-color);
  transition: color 0.3s ease;
}

.search-btn:hover, .theme-toggle:hover {
  color: var(--primary-color);
}

.theme-toggle .dark-icon {
  display: none;
}

.dark-theme .theme-toggle .light-icon {
  display: none;
}

.dark-theme .theme-toggle .dark-icon {
  display: inline;
}

/* Hero section */
.hero {
  background-color: var(--background-alt);
  padding: 4rem 0;
  text-align: center;
}

.hero-content {
  max-width: 800px;
  margin: 0 auto;
}

.hero h2 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.hero p {
  font-size: 1.2rem;
  color: var(--text-light);
}

/* Featured posts section */
.featured-posts {
  padding: 4rem 0;
}

.featured-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.featured-post {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  background-color: var(--background);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: var(--shadow);
}

.featured-post:nth-child(even) {
  grid-template-columns: 1fr 1fr;
}

.featured-post-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.featured-post-content {
  padding: 2rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.post-category {
  display: inline-block;
  background-color: var(--accent-color);
  color: white;
  padding: 0.2rem 0.8rem;
  border-radius: 20px;
  font-size: 0.8rem;
  margin-bottom: 1rem;
}

.featured-post-content h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.post-meta {
  display: flex;
  gap: 1rem;
  margin-bottom: 1rem;
  font-size: 0.9rem;
  color: var(--text-light);
}

.post-excerpt {
  margin-bottom: 1.5rem;
  color: var(--text-light);
}

.read-more {
  align-self: flex-start;
  padding: 0.5rem 1rem;
  background-color: var(--primary-color);
  color: white;
  border-radius: 4px;
  font-weight: 500;
  transition: background-color 0.3s ease;
}

.read-more:hover {
  background-color: var(--secondary-color);
  color: white;
}

/* Recent posts section */
.recent-posts {
  padding: 4rem 0;
  background-color: var(--background-alt);
}

.posts-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.posts-filter {
  display: flex;
  gap: 0.5rem;
}

.filter-btn {
  padding: 0.5rem 1rem;
  border: none;
  background: var(--background);
  border-radius: 4px;
  transition: all 0.3s ease;
  font-size: 0.9rem;
  color: var(--text-color);
}

.filter-btn.active,
.filter-btn:hover {
  background-color: var(--primary-color);
  color: white;
}

.posts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  margin-bottom: 2rem;
}

.post-card {
  background-color: var(--background);
  border-radius: 8px;
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: transform 0.3s ease;
}

.post-card:hover {
  transform: translateY(-5px);
}

.post-card-image {
  height: 200px;
  overflow: hidden;
}

.post-card-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.post-card:hover .post-card-image img {
  transform: scale(1.05);
}

.post-card-content {
  padding: 1.5rem;
}

.post-card-content h3 {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.pagination-btn {
  padding: 0.5rem 1rem;
  border: none;
  background: var(--background);
  border-radius: 4px;
  transition: all 0.3s ease;
  color: var(--text-color);
}

.pagination-btn:hover {
  background-color: var(--primary-color);
  color: white;
}

.pagination-numbers {
  display: flex;
  gap: 0.5rem;
}

.page-number {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 35px;
  height: 35px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 0.9rem;
}

.page-number.active,
.page-number:hover {
  background-color: var(--primary-color);
  color: white;
}

/* Blog features section */
.blog-features {
  padding: 4rem 0;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
}

.feature {
  background-color: var(--background);
  padding: 2rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
  border-top: 3px solid var(--primary-color);
}

.feature h3 {
  color: var(--primary-color);
  margin-bottom: 1rem;
}

/* Newsletter section */
.newsletter {
  background-color: var(--primary-color);
  color: white;
  padding: 4rem 0;
}

.newsletter-content {
  text-align: center;
  max-width: 600px;
  margin: 0 auto;
}

.newsletter-content h2 {
  font-size: 1.8rem;
  margin-bottom: 1rem;
}

.newsletter-content p {
  margin-bottom: 2rem;
  opacity: 0.9;
}

#newsletter-form {
  display: flex;
  max-width: 500px;
  margin: 0 auto;
}

#newsletter-form input {
  flex: 1;
  padding: 0.8rem 1rem;
  border: none;
  border-radius: 4px 0 0 4px;
  font-size: 0.95rem;
}

#newsletter-form button {
  padding: 0 1.5rem;
  border: none;
  background-color: var(--accent-color);
  color: white;
  border-radius: 0 4px 4px 0;
  font-weight: 500;
}

#newsletter-form button:hover {
  background-color: var(--secondary-color);
}

/* Footer */
footer {
  background-color: var(--background-alt);
  padding-top: 4rem;
}

.footer-content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
  padding-bottom: 3rem;
}

.footer-section h3 {
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
  position: relative;
  display: inline-block;
}

.footer-section h3::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -5px;
  width: 30px;
  height: 2px;
  background-color: var(--primary-color);
}

.footer-section ul li {
  margin-bottom: 0.7rem;
}

.social-links {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.social-link {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: var(--background);
  border-radius: 4px;
  transition: all 0.3s ease;
}

.social-link:hover {
  background-color: var(--primary-color);
  color: white;
}

.footer-bottom {
  text-align: center;
  padding: 1.5rem 0;
  border-top: 1px solid var(--border-color);
  font-size: 0.9rem;
  color: var(--text-light);
}

/* Responsive styles */
@media (max-width: 992px) {
  .featured-post,
  .featured-post:nth-child(even) {
    grid-template-columns: 1fr;
  }
  
  .featured-post-image {
    height: 300px;
  }
}

@media (max-width: 768px) {
  .posts-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .posts-filter {
    width: 100%;
    overflow-x: auto;
    padding-bottom: 0.5rem;
  }
  
  .post-meta {
    flex-direction: column;
    gap: 0.3rem;
  }
  
  #newsletter-form {
    flex-direction: column;
  }
  
  #newsletter-form input {
    border-radius: 4px;
    margin-bottom: 1rem;
  }
  
  #newsletter-form button {
    border-radius: 4px;
  }
}

@media (max-width: 576px) {
  .section-title {
    font-size: 1.5rem;
  }
  
  nav ul {
    display: none;
  }
  
  .pagination-numbers {
    display: none;
  }
}`;
}

function generateBlogJS(requirements: ProjectRequirement): string {
  return `// Blog Website JavaScript

// Sample blog posts data (in a real app, this would come from a backend API)
const blogPosts = [
  {
    id: 1,
    title: 'Getting Started with Web Development',
    category: 'technology',
    excerpt: 'Learn the basics of HTML, CSS, and JavaScript to start your web development journey.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=Web+Development',
    author: 'John Doe',
    date: '2023-05-15',
    featured: true
  },
  {
    id: 2,
    title: '10 Must-Visit Destinations in Europe',
    category: 'travel',
    excerpt: 'Discover the most beautiful places in Europe for your next vacation.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=Europe+Travel',
    author: 'Jane Smith',
    date: '2023-05-10',
    featured: true
  },
  {
    id: 3,
    title: 'Healthy Eating Habits for Busy Professionals',
    category: 'lifestyle',
    excerpt: 'Simple tips to maintain a healthy diet even with a busy schedule.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=Healthy+Eating',
    author: 'Sarah Johnson',
    date: '2023-05-05',
    featured: false
  },
  {
    id: 4,
    title: 'The Future of Artificial Intelligence',
    category: 'technology',
    excerpt: 'Exploring how AI is transforming industries and what the future holds.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=AI+Future',
    author: 'Michael Brown',
    date: '2023-04-28',
    featured: false
  },
  {
    id: 5,
    title: 'Minimalist Living: Declutter Your Life',
    category: 'lifestyle',
    excerpt: 'How adopting a minimalist lifestyle can reduce stress and increase happiness.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=Minimalist+Living',
    author: 'Emily Wilson',
    date: '2023-04-22',
    featured: false
  },
  {
    id: 6,
    title: 'Hidden Gems in Southeast Asia',
    category: 'travel',
    excerpt: 'Discover less-known but amazing places to visit in Southeast Asia.',
    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit...',
    image: 'https://via.placeholder.com/800x600?text=Southeast+Asia',
    author: 'David Chen',
    date: '2023-04-18',
    featured: false
  }
];

// Initialize the blog
document.addEventListener('DOMContentLoaded', () => {
  // Display featured posts
  displayFeaturedPosts();
  
  // Display recent posts
  displayRecentPosts('all');
  
  // Set up event listeners
  setupEventListeners();
});

// Display featured posts
function displayFeaturedPosts() {
  const featuredPostsContainer = document.getElementById('featured-posts');
  
  if (featuredPostsContainer) {
    featuredPostsContainer.innerHTML = '';
    
    const featuredPosts = blogPosts.filter(post => post.featured);
    
    featuredPosts.forEach(post => {
      const postElement = createFeaturedPostElement(post);
      featuredPostsContainer.appendChild(postElement);
    });
  }
}

// Create a featured post element
function createFeaturedPostElement(post) {
  const postDiv = document.createElement('div');
  postDiv.className = 'featured-post';
  
  const formattedDate = formatDate(post.date);
  
  postDiv.innerHTML = \`
    <div class="featured-post-image">
      <img src="\${post.image}" alt="\${post.title}">
    </div>
    <div class="featured-post-content">
      <span class="post-category">\${post.category}</span>
      <h3>\${post.title}</h3>
      <div class="post-meta">
        <span class="post-author">By \${post.author}</span>
        <span class="post-date">\${formattedDate}</span>
      </div>
      <p class="post-excerpt">\${post.excerpt}</p>
      <a href="#" class="read-more">Read More</a>
    </div>
  \`;
  
  return postDiv;
}

// Display recent posts
function displayRecentPosts(category) {
  const recentPostsContainer = document.getElementById('recent-posts');
  
  if (recentPostsContainer) {
    recentPostsContainer.innerHTML = '';
    
    const filteredPosts = category === 'all' 
      ? blogPosts 
      : blogPosts.filter(post => post.category === category);
    
    // Sort by date (newest first)
    const sortedPosts = [...filteredPosts].sort((a, b) => new Date(b.date) - new Date(a.date));
    
    sortedPosts.forEach(post => {
      const postElement = createPostCardElement(post);
      recentPostsContainer.appendChild(postElement);
    });
  }
}

// Create a post card element
function createPostCardElement(post) {
  const postDiv = document.createElement('div');
  postDiv.className = 'post-card';
  
  const formattedDate = formatDate(post.date);
  
  postDiv.innerHTML = \`
    <div class="post-card-image">
      <img src="\${post.image}" alt="\${post.title}">
    </div>
    <div class="post-card-content">
      <span class="post-category">\${post.category}</span>
      <h3>\${post.title}</h3>
      <div class="post-meta">
        <span class="post-author">By \${post.author}</span>
        <span class="post-date">\${formattedDate}</span>
      </div>
      <p class="post-excerpt">\${post.excerpt}</p>
      <a href="#" class="read-more">Read More</a>
    </div>
  \`;
  
  return postDiv;
}

// Format date to a more readable format
function formatDate(dateString) {
  const options = { year: 'numeric', month: 'long', day: 'numeric' };
  return new Date(dateString).toLocaleDateString('en-US', options);
}

// Set up event listeners
function setupEventListeners() {
  // Category filter buttons
  const filterBtns = document.querySelectorAll('.filter-btn');
  filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      // Update active state
      filterBtns.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      
      // Filter posts
      const category = btn.getAttribute('data-category');
      displayRecentPosts(category);
    });
  });
  
  // Dark/Light theme toggle
  const themeToggle = document.getElementById('theme-toggle');
  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      document.body.classList.toggle('dark-theme');
      
      // Store the preference in localStorage
      const isDarkTheme = document.body.classList.contains('dark-theme');
      localStorage.setItem('darkTheme', isDarkTheme);
    });
    
    // Check for saved theme preference
    const savedTheme = localStorage.getItem('darkTheme');
    if (savedTheme === 'true') {
      document.body.classList.add('dark-theme');
    }
  }
  
  // Pagination buttons
  const paginationBtns = document.querySelectorAll('.pagination-btn');
  paginationBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      // In a real app, this would handle page navigation
      const direction = btn.getAttribute('data-page');
      console.log(\`Navigate \${direction}\`);
    });
  });
  
  // Page number buttons
  const pageNumbers = document.querySelectorAll('.page-number');
  pageNumbers.forEach(number => {
    number.addEventListener('click', () => {
      // Update active state
      pageNumbers.forEach(n => n.classList.remove('active'));
      number.classList.add('active');
      
      // In a real app, this would load the selected page
      console.log(\`Load page \${number.textContent}\`);
    });
  });
  
  // Newsletter form submission
  const newsletterForm = document.getElementById('newsletter-form');
  if (newsletterForm) {
    newsletterForm.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const emailInput = newsletterForm.querySelector('input[type="email"]');
      if (emailInput && emailInput.value) {
        // In a real app, this would subscribe the user to a newsletter
        alert(\`Thank you for subscribing with \${emailInput.value}!\`);
        emailInput.value = '';
      }
    });
  }
}

// Implement features based on requirements
${requirements.features?.length > 0 ? `
// Custom features implementation
const features = ${JSON.stringify(requirements.features)};

features.forEach(feature => {
  console.log(\`Implementing blog feature: \${feature}\`);
  // In a real app, each feature would have its own implementation
});
` : '// No custom features specified'}`;
}

// Template generators for Dashboard project type
function generateDashboardHTML(requirements: ProjectRequirement): string {
  const projectName = requirements.projectName || "Admin Dashboard";
  const description = requirements.description || "Powerful admin dashboard template";
  const features = requirements.features || [];
  
  return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectName}</title>
  <link rel="stylesheet" href="styles.css">
  <!-- Font Awesome CDN (in a real app, you'd host this yourself) -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
  <div class="dashboard-container">
    <!-- Sidebar -->
    <aside class="sidebar" id="sidebar">
      <div class="sidebar-header">
        <h2>${projectName}</h2>
        <button class="sidebar-toggle" id="sidebar-toggle">
          <i class="fas fa-bars"></i>
        </button>
      </div>
      <nav class="sidebar-nav">
        <ul>
          <li>
            <a href="#" class="active">
              <i class="fas fa-home"></i>
              <span>Dashboard</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fas fa-chart-bar"></i>
              <span>Analytics</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fas fa-shopping-cart"></i>
              <span>Orders</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fas fa-box"></i>
              <span>Products</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fas fa-users"></i>
              <span>Customers</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fas fa-cog"></i>
              <span>Settings</span>
            </a>
          </li>
        </ul>
      </nav>
      <div class="sidebar-footer">
        <a href="#">
          <i class="fas fa-sign-out-alt"></i>
          <span>Logout</span>
        </a>
      </div>
    </aside>

    <!-- Main Content -->
    <main class="main-content">
      <!-- Header -->
      <header class="header">
        <div class="header-search">
          <i class="fas fa-search"></i>
          <input type="text" placeholder="Search...">
        </div>
        <div class="header-actions">
          <button class="btn-icon">
            <i class="fas fa-bell"></i>
            <span class="notification-badge">3</span>
          </button>
          <button class="btn-icon">
            <i class="fas fa-envelope"></i>
            <span class="notification-badge">5</span>
          </button>
          <div class="user-profile">
            <img src="https://via.placeholder.com/40" alt="User profile">
            <span>Admin User</span>
          </div>
        </div>
      </header>

      <!-- Dashboard Content -->
      <div class="dashboard-content">
        <div class="page-header">
          <h1>Dashboard Overview</h1>
          <p>${description}</p>
        </div>

        <!-- Stats Cards -->
        <section class="stats-cards">
          <div class="stats-card">
            <div class="stats-icon" style="background-color: rgba(34, 139, 230, 0.1);">
              <i class="fas fa-shopping-cart" style="color: #228BE6;"></i>
            </div>
            <div class="stats-info">
              <h3>Total Sales</h3>
              <p class="stats-value">$24,780</p>
              <p class="stats-change positive">+12.5% from last month</p>
            </div>
          </div>
          <div class="stats-card">
            <div class="stats-icon" style="background-color: rgba(94, 234, 212, 0.1);">
              <i class="fas fa-users" style="color: #0CA678;"></i>
            </div>
            <div class="stats-info">
              <h3>New Customers</h3>
              <p class="stats-value">120</p>
              <p class="stats-change positive">+8.2% from last month</p>
            </div>
          </div>
          <div class="stats-card">
            <div class="stats-icon" style="background-color: rgba(250, 82, 82, 0.1);">
              <i class="fas fa-box" style="color: #FA5252;"></i>
            </div>
            <div class="stats-info">
              <h3>Product Orders</h3>
              <p class="stats-value">580</p>
              <p class="stats-change negative">-2.4% from last month</p>
            </div>
          </div>
          <div class="stats-card">
            <div class="stats-icon" style="background-color: rgba(255, 159, 64, 0.1);">
              <i class="fas fa-dollar-sign" style="color: #FF9F40;"></i>
            </div>
            <div class="stats-info">
              <h3>Revenue</h3>
              <p class="stats-value">$12,430</p>
              <p class="stats-change positive">+10.8% from last month</p>
            </div>
          </div>
        </section>

        <!-- Charts Section -->
        <section class="charts-section">
          <div class="chart-container">
            <div class="chart-header">
              <h2>Sales Analytics</h2>
              <div class="chart-controls">
                <select id="sales-period">
                  <option value="weekly">Weekly</option>
                  <option value="monthly" selected>Monthly</option>
                  <option value="yearly">Yearly</option>
                </select>
              </div>
            </div>
            <div class="chart" id="sales-chart">
              <!-- Chart will be rendered via JavaScript -->
              <div class="chart-placeholder">Sales Chart Loading...</div>
            </div>
          </div>
          <div class="chart-container">
            <div class="chart-header">
              <h2>Traffic Sources</h2>
              <div class="chart-controls">
                <button class="btn-refresh">
                  <i class="fas fa-sync-alt"></i>
                </button>
              </div>
            </div>
            <div class="chart" id="traffic-chart">
              <!-- Chart will be rendered via JavaScript -->
              <div class="chart-placeholder">Traffic Chart Loading...</div>
            </div>
          </div>
        </section>
        
        ${features.length > 0 ? `
        <!-- Custom Features Section -->
        <section class="features-section">
          <h2>Dashboard Features</h2>
          <div class="features-grid">
            ${features.map(feature => `
              <div class="feature-card">
                <div class="feature-icon">
                  <i class="fas fa-star"></i>
                </div>
                <h3>${feature}</h3>
                <p>Enhance your dashboard experience.</p>
              </div>
            `).join('')}
          </div>
        </section>
        ` : ''}

        <!-- Recent Orders -->
        <section class="recent-orders">
          <div class="section-header">
            <h2>Recent Orders</h2>
            <a href="#" class="view-all">View All</a>
          </div>
          <div class="table-container">
            <table class="data-table">
              <thead>
                <tr>
                  <th>Order ID</th>
                  <th>Customer</th>
                  <th>Product</th>
                  <th>Date</th>
                  <th>Amount</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody id="recent-orders-table">
                <!-- Orders will be loaded via JavaScript -->
              </tbody>
            </table>
          </div>
        </section>
      </div>
    </main>
  </div>

  <script src="script.js"></script>
</body>
</html>`;
}

function generateDashboardCSS(themeColor: string): string {
  const colors = getThemeColors(themeColor);
  
  return `/* Dashboard Styles */
:root {
  --primary-color: ${colors.primary};
  --secondary-color: ${colors.secondary};
  --accent-color: ${colors.accent};
  --text-color: #333;
  --text-secondary: #718096;
  --bg-color: #f8f9fa;
  --sidebar-bg: #2D3748;
  --sidebar-text: #CBD5E0;
  --sidebar-active: ${colors.primary};
  --border-color: #E2E8F0;
  --card-bg: white;
  --success-color: #38A169;
  --danger-color: #E53E3E;
  --warning-color: #DD6B20;
  --info-color: #3182CE;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--bg-color);
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
}

button, input, select {
  font-family: inherit;
  font-size: inherit;
}

/* Dashboard container */
.dashboard-container {
  display: flex;
  min-height: 100vh;
}

/* Sidebar */
.sidebar {
  width: 250px;
  background-color: var(--sidebar-bg);
  color: var(--sidebar-text);
  display: flex;
  flex-direction: column;
  transition: width 0.3s ease;
}

.sidebar.collapsed {
  width: 70px;
}

.sidebar-header {
  padding: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.sidebar-header h2 {
  font-size: 1.2rem;
  font-weight: 600;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.sidebar.collapsed .sidebar-header h2 {
  display: none;
}

.sidebar-toggle {
  background: transparent;
  border: none;
  color: var(--sidebar-text);
  cursor: pointer;
  font-size: 1.2rem;
}

.sidebar-nav {
  flex: 1;
  padding: 1.5rem 0;
  overflow-y: auto;
}

.sidebar-nav ul li {
  margin-bottom: 0.5rem;
}

.sidebar-nav ul li a {
  display: flex;
  align-items: center;
  padding: 0.75rem 1.5rem;
  color: var(--sidebar-text);
  transition: all 0.3s ease;
}

.sidebar-nav ul li a:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

.sidebar-nav ul li a.active {
  background-color: rgba(255, 255, 255, 0.1);
  border-left: 3px solid var(--sidebar-active);
  color: white;
}

.sidebar-nav ul li a i {
  font-size: 1.2rem;
  margin-right: 1rem;
  width: 20px;
  text-align: center;
}

.sidebar.collapsed .sidebar-nav ul li a span {
  display: none;
}

.sidebar.collapsed .sidebar-nav ul li a {
  padding: 0.75rem;
  justify-content: center;
}

.sidebar.collapsed .sidebar-nav ul li a i {
  margin-right: 0;
}

.sidebar-footer {
  padding: 1rem 1.5rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.sidebar-footer a {
  display: flex;
  align-items: center;
  color: var(--sidebar-text);
}

.sidebar-footer a i {
  margin-right: 0.5rem;
}

.sidebar.collapsed .sidebar-footer a span {
  display: none;
}

.sidebar.collapsed .sidebar-footer {
  display: flex;
  justify-content: center;
}

.sidebar.collapsed .sidebar-footer a {
  justify-content: center;
}

.sidebar.collapsed .sidebar-footer a i {
  margin-right: 0;
}

/* Main content */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
}

/* Header */
.header {
  height: 70px;
  background-color: var(--card-bg);
  box-shadow: var(--shadow-sm);
  padding: 0 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.header-search {
  position: relative;
  width: 300px;
}

.header-search i {
  position: absolute;
  left: 10px;
  top: 50%;
  transform: translateY(-50%);
  color: var(--text-secondary);
}

.header-search input {
  width: 100%;
  padding: 0.5rem 1rem 0.5rem 2rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--bg-color);
}

.header-search input:focus {
  outline: none;
  border-color: var(--primary-color);
}

.header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.btn-icon {
  background: none;
  border: none;
  cursor: pointer;
  position: relative;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s ease;
}

.btn-icon:hover {
  background-color: var(--bg-color);
}

.notification-badge {
  position: absolute;
  top: 0;
  right: 0;
  background-color: var(--danger-color);
  color: white;
  font-size: 0.7rem;
  width: 18px;
  height: 18px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.user-profile {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

.user-profile img {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  object-fit: cover;
}

/* Dashboard content */
.dashboard-content {
  flex: 1;
  padding: 1.5rem;
  overflow-y: auto;
}

.page-header {
  margin-bottom: 2rem;
}

.page-header h1 {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
}

.page-header p {
  color: var(--text-secondary);
}

/* Stats cards */
.stats-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.stats-card {
  background-color: var(--card-bg);
  border-radius: 8px;
  box-shadow: var(--shadow);
  padding: 1.5rem;
  display: flex;
  align-items: center;
}

.stats-icon {
  width: 50px;
  height: 50px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 1rem;
}

.stats-icon i {
  font-size: 1.5rem;
}

.stats-info h3 {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin-bottom: 0.5rem;
}

.stats-value {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
}

.stats-change {
  font-size: 0.8rem;
}

.stats-change.positive {
  color: var(--success-color);
}

.stats-change.negative {
  color: var(--danger-color);
}

/* Charts section */
.charts-section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
}

.chart-container {
  background-color: var(--card-bg);
  border-radius: 8px;
  box-shadow: var(--shadow);
  padding: 1.5rem;
}

.chart-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.chart-header h2 {
  font-size: 1.1rem;
}

.chart-controls select {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--bg-color);
}

.btn-refresh {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-secondary);
}

.chart {
  height: 300px;
  width: 100%;
}

.chart-placeholder {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  border: 1px dashed var(--border-color);
  border-radius: 4px;
}

/* Features section */
.features-section {
  margin-bottom: 2rem;
}

.features-section h2 {
  font-size: 1.1rem;
  margin-bottom: 1.5rem;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
}

.feature-card {
  background-color: var(--card-bg);
  border-radius: 8px;
  box-shadow: var(--shadow);
  padding: 1.5rem;
  text-align: center;
  transition: transform 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-5px);
}

.feature-icon {
  width: 50px;
  height: 50px;
  background-color: rgba(var(--primary-color-rgb), 0.1);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto 1rem;
  color: var(--primary-color);
}

.feature-card h3 {
  font-size: 1.1rem;
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

.feature-card p {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

/* Recent orders section */
.recent-orders {
  background-color: var(--card-bg);
  border-radius: 8px;
  box-shadow: var(--shadow);
  padding: 1.5rem;
}

.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.section-header h2 {
  font-size: 1.1rem;
}

.view-all {
  color: var(--primary-color);
  font-size: 0.9rem;
}

.table-container {
  overflow-x: auto;
}

.data-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.9rem;
}

.data-table th {
  text-align: left;
  padding: 1rem;
  background-color: var(--bg-color);
  color: var(--text-secondary);
  font-weight: 500;
}

.data-table tr {
  border-bottom: 1px solid var(--border-color);
}

.data-table tr:last-child {
  border-bottom: none;
}

.data-table td {
  padding: 1rem;
}

.status-badge {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.8rem;
  font-weight: 500;
}

.status-badge.completed {
  background-color: rgba(56, 161, 105, 0.1);
  color: var(--success-color);
}

.status-badge.pending {
  background-color: rgba(221, 107, 32, 0.1);
  color: var(--warning-color);
}

.status-badge.cancelled {
  background-color: rgba(229, 62, 62, 0.1);
  color: var(--danger-color);
}

.action-btn {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--text-secondary);
  transition: color 0.3s ease;
}

.action-btn:hover {
  color: var(--primary-color);
}

/* Responsive styles */
@media (max-width: 991px) {
  .charts-section {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .sidebar {
    position: fixed;
    left: -250px;
    top: 0;
    height: 100%;
    z-index: 1000;
    transition: left 0.3s ease;
  }
  
  .sidebar.active {
    left: 0;
  }
  
  .sidebar-toggle {
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 1001;
    background-color: var(--primary-color);
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .main-content {
    margin-left: 0;
  }
  
  .header {
    padding-left: 4.5rem;
  }
  
  .header-search {
    width: 200px;
  }
  
  .stats-cards {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 576px) {
  .header {
    flex-direction: column;
    height: auto;
    padding: 1rem;
  }
  
  .header-search {
    width: 100%;
    margin-bottom: 1rem;
  }
  
  .user-profile span {
    display: none;
  }
}`;
}

function generateDashboardJS(requirements: ProjectRequirement): string {
  return `// Dashboard JavaScript

// Sample orders data (in a real app, this would come from a backend API)
const orders = [
  {
    id: 'ORD-001',
    customer: 'John Doe',
    product: 'Product A',
    date: '2023-05-15',
    amount: '$120.00',
    status: 'completed'
  },
  {
    id: 'ORD-002',
    customer: 'Jane Smith',
    product: 'Product B',
    date: '2023-05-14',
    amount: '$85.50',
    status: 'pending'
  },
  {
    id: 'ORD-003',
    customer: 'Robert Johnson',
    product: 'Product C',
    date: '2023-05-13',
    amount: '$220.00',
    status: 'completed'
  },
  {
    id: 'ORD-004',
    customer: 'Emily Wilson',
    product: 'Product A',
    date: '2023-05-12',
    amount: '$120.00',
    status: 'cancelled'
  },
  {
    id: 'ORD-005',
    customer: 'Michael Brown',
    product: 'Product D',
    date: '2023-05-11',
    amount: '$175.25',
    status: 'pending'
  }
];

// Sample sales data for chart (in a real app, this would come from a backend API)
const salesData = {
  weekly: {
    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
    values: [1200, 1900, 1500, 2000, 2500, 2200, 2800]
  },
  monthly: {
    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
    values: [5000, 6000, 8000, 7500, 9000, 10000, 9500, 11000, 10500, 12000, 11500, 13000]
  },
  yearly: {
    labels: ['2019', '2020', '2021', '2022', '2023'],
    values: [60000, 80000, 90000, 100000, 120000]
  }
};

// Sample traffic sources data for chart
const trafficData = {
  labels: ['Organic Search', 'Direct', 'Social Media', 'Referral', 'Email'],
  values: [35, 25, 20, 15, 5]
};

// Initialize the dashboard
document.addEventListener('DOMContentLoaded', () => {
  // Render recent orders
  renderRecentOrders();
  
  // Create chart placeholders (in a real app, you'd use a charting library)
  createChartPlaceholders();
  
  // Set up event listeners
  setupEventListeners();
});

// Render recent orders in the table
function renderRecentOrders() {
  const ordersTableBody = document.getElementById('recent-orders-table');
  
  if (ordersTableBody) {
    ordersTableBody.innerHTML = '';
    
    orders.forEach(order => {
      const row = document.createElement('tr');
      
      row.innerHTML = \`
        <td>\${order.id}</td>
        <td>\${order.customer}</td>
        <td>\${order.product}</td>
        <td>\${formatDate(order.date)}</td>
        <td>\${order.amount}</td>
        <td><span class="status-badge \${order.status}">\${capitalizeFirstLetter(order.status)}</span></td>
        <td>
          <button class="action-btn" title="View Details">
            <i class="fas fa-eye"></i>
          </button>
          <button class="action-btn" title="Edit">
            <i class="fas fa-edit"></i>
          </button>
          <button class="action-btn" title="Delete">
            <i class="fas fa-trash"></i>
          </button>
        </td>
      \`;
      
      ordersTableBody.appendChild(row);
    });
  }
}

// Format date to a more readable format
function formatDate(dateString) {
  const options = { year: 'numeric', month: 'short', day: 'numeric' };
  return new Date(dateString).toLocaleDateString('en-US', options);
}

// Capitalize the first letter of a string
function capitalizeFirstLetter(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

// Create chart placeholders (in a real app, you'd use a charting library like Chart.js)
function createChartPlaceholders() {
  const salesChartElem = document.getElementById('sales-chart');
  const trafficChartElem = document.getElementById('traffic-chart');
  
  if (salesChartElem) {
    salesChartElem.innerHTML = \`
      <div class="chart-placeholder">
        <p>Sales Analytics Chart</p>
        <p>Selected Period: Monthly</p>
        <p>In a real app, this would be an interactive chart.</p>
      </div>
    \`;
  }
  
  if (trafficChartElem) {
    trafficChartElem.innerHTML = \`
      <div class="chart-placeholder">
        <p>Traffic Sources Chart</p>
        <p>In a real app, this would be an interactive pie/donut chart.</p>
      </div>
    \`;
  }
}

// Set up event listeners
function setupEventListeners() {
  // Sidebar toggle
  const sidebarToggle = document.getElementById('sidebar-toggle');
  const sidebar = document.getElementById('sidebar');
  
  if (sidebarToggle && sidebar) {
    sidebarToggle.addEventListener('click', () => {
      sidebar.classList.toggle('collapsed');
      
      // In mobile view, toggle active class
      if (window.innerWidth <= 768) {
        sidebar.classList.toggle('active');
      }
    });
  }
  
  // Sales period select
  const salesPeriodSelect = document.getElementById('sales-period');
  if (salesPeriodSelect) {
    salesPeriodSelect.addEventListener('change', (e) => {
      const period = e.target.value;
      updateSalesChart(period);
    });
  }
  
  // Refresh button
  const refreshBtn = document.querySelector('.btn-refresh');
  if (refreshBtn) {
    refreshBtn.addEventListener('click', () => {
      updateTrafficChart();
    });
  }
  
  // Action buttons in the table
  document.addEventListener('click', (e) => {
    if (e.target.closest('.action-btn')) {
      // In a real app, these would perform actual actions
      const button = e.target.closest('.action-btn');
      const action = button.getAttribute('title');
      const row = button.closest('tr');
      const orderId = row.cells[0].textContent;
      
      console.log(\`\${action} for order \${orderId}\`);
    }
  });
  
  // Handle window resize
  window.addEventListener('resize', () => {
    // If in mobile view and sidebar is active, close it when resizing to desktop
    if (window.innerWidth > 768 && sidebar.classList.contains('active')) {
      sidebar.classList.remove('active');
    }
  });
}

// Update sales chart based on selected period
function updateSalesChart(period) {
  const salesChartElem = document.getElementById('sales-chart');
  
  if (salesChartElem) {
    // In a real app, you'd update the chart with new data
    salesChartElem.innerHTML = \`
      <div class="chart-placeholder">
        <p>Sales Analytics Chart</p>
        <p>Selected Period: \${capitalizeFirstLetter(period)}</p>
        <p>In a real app, this would be an interactive chart with updated data.</p>
      </div>
    \`;
  }
}

// Update traffic chart with new data
function updateTrafficChart() {
  const trafficChartElem = document.getElementById('traffic-chart');
  
  if (trafficChartElem) {
    // In a real app, you'd refresh the chart with new data
    trafficChartElem.innerHTML = \`
      <div class="chart-placeholder">
        <p>Traffic Sources Chart (Refreshed)</p>
        <p>In a real app, this would refresh with new data.</p>
      </div>
    \`;
  }
}

// Implement features based on requirements
${requirements.features?.length > 0 ? `
// Custom features implementation
const features = ${JSON.stringify(requirements.features)};

features.forEach(feature => {
  console.log(\`Implementing dashboard feature: \${feature}\`);
  // In a real app, each feature would have its own implementation
});
` : '// No custom features specified'}`;
}

// Template generators for Landing Page project type
function generateLandingPageHTML(requirements: ProjectRequirement): string {
  const projectName = requirements.projectName || "Landing Page";
  const description = requirements.description || "A beautiful and modern landing page";
  const features = requirements.features || [];
  
  return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${projectName}</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <header class="header">
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <h1>${projectName}</h1>
        </div>
        <nav class="nav">
          <ul>
            <li><a href="#home" class="active">Home</a></li>
            <li><a href="#features">Features</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#testimonials">Testimonials</a></li>
            <li><a href="#contact">Contact</a></li>
          </ul>
        </nav>
        <button class="menu-toggle" id="menu-toggle">
          <span></span>
          <span></span>
          <span></span>
        </button>
      </div>
    </div>
  </header>

  <main>
    <section id="home" class="hero">
      <div class="container">
        <div class="hero-content">
          <h2>Welcome to ${projectName}</h2>
          <p>${description}</p>
          <div class="hero-buttons">
            <a href="#features" class="btn primary">Learn More</a>
            <a href="#contact" class="btn outline">Get Started</a>
          </div>
        </div>
        <div class="hero-image">
          <img src="https://via.placeholder.com/600x400" alt="Hero Image">
        </div>
      </div>
    </section>

    <section id="features" class="features">
      <div class="container">
        <div class="section-header">
          <h2>Our Features</h2>
          <p>Discover what makes us stand out from the crowd</p>
        </div>
        <div class="features-grid">
          <div class="feature-card">
            <div class="feature-icon">🚀</div>
            <h3>Fast & Efficient</h3>
            <p>Our solution is optimized for speed and performance.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">🔒</div>
            <h3>Secure & Reliable</h3>
            <p>Security is our top priority with robust encryption.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">📱</div>
            <h3>Mobile Friendly</h3>
            <p>Fully responsive design that works on all devices.</p>
          </div>
          <div class="feature-card">
            <div class="feature-icon">💬</div>
            <h3>24/7 Support</h3>
            <p>Our dedicated team is always ready to help you.</p>
          </div>
          
          ${features.length > 0 ? features.map(feature => `
            <div class="feature-card custom-feature">
              <div class="feature-icon">✨</div>
              <h3>${feature}</h3>
              <p>Specially designed to enhance your experience.</p>
            </div>
          `).join('') : ''}
        </div>
      </div>
    </section>

    <section id="about" class="about">
      <div class="container">
        <div class="about-content">
          <div class="about-text">
            <h2>About Us</h2>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem.</p>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nunc ut aliquam aliquam, nunc nisl aliquet nisl, eget aliquam nisl nisl sit amet lorem.</p>
            <div class="about-stats">
              <div class="stat">
                <h3>500+</h3>
                <p>Happy Clients</p>
              </div>
              <div class="stat">
                <h3>50+</h3>
                <p>Team Members</p>
              </div>
              <div class="stat">
                <h3>1000+</h3>
                <p>Projects Completed</p>
              </div>
            </div>
          </div>
          <div class="about-image">
            <img src="https://via.placeholder.com/500x400" alt="About us">
          </div>
        </div>
      </div>
    </section>

    <section id="testimonials" class="testimonials">
      <div class="container">
        <div class="section-header">
          <h2>What Our Clients Say</h2>
          <p>Read testimonials from our satisfied customers</p>
        </div>
        <div class="testimonials-slider" id="testimonials-slider">
          <!-- Testimonials will be loaded via JavaScript -->
        </div>
        <div class="slider-controls">
          <button id="prev-testimonial" class="slider-control">←</button>
          <button id="next-testimonial" class="slider-control">→</button>
        </div>
      </div>
    </section>

    <section id="contact" class="contact">
      <div class="container">
        <div class="section-header">
          <h2>Get In Touch</h2>
          <p>We'd love to hear from you. Contact us today!</p>
        </div>
        <div class="contact-content">
          <div class="contact-form">
            <form id="contact-form">
              <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" required>
              </div>
              <div class="form-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required>
              </div>
              <div class="form-group">
                <label for="subject">Subject</label>
                <input type="text" id="subject" name="subject">
              </div>
              <div class="form-group">
                <label for="message">Message</label>
                <textarea id="message" name="message" rows="5" required></textarea>
              </div>
              <button type="submit" class="btn primary">Send Message</button>
            </form>
          </div>
          <div class="contact-info">
            <div class="contact-card">
              <div class="contact-icon">📍</div>
              <h3>Our Location</h3>
              <p>123 Main Street, City, Country</p>
            </div>
            <div class="contact-card">
              <div class="contact-icon">📞</div>
              <h3>Phone Number</h3>
              <p>+1 (123) 456-7890</p>
            </div>
            <div class="contact-card">
              <div class="contact-icon">✉️</div>
              <h3>Email Address</h3>
              <p>info@example.com</p>
            </div>
            <div class="contact-card">
              <div class="contact-icon">🕒</div>
              <h3>Working Hours</h3>
              <p>Mon-Fri: 9:00 AM - 5:00 PM</p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <section class="cta">
      <div class="container">
        <div class="cta-content">
          <h2>Ready to Get Started?</h2>
          <p>Join thousands of satisfied customers today!</p>
          <a href="#contact" class="btn primary">Contact Us Now</a>
        </div>
      </div>
    </section>
  </main>

  <footer class="footer">
    <div class="container">
      <div class="footer-content">
        <div class="footer-section">
          <h3>${projectName}</h3>
          <p>A modern landing page for your business or project.</p>
          <div class="social-links">
            <a href="#" class="social-link">Facebook</a>
            <a href="#" class="social-link">Twitter</a>
            <a href="#" class="social-link">Instagram</a>
            <a href="#" class="social-link">LinkedIn</a>
          </div>
        </div>
        <div class="footer-section">
          <h3>Quick Links</h3>
          <ul>
            <li><a href="#home">Home</a></li>
            <li><a href="#features">Features</a></li>
            <li><a href="#about">About</a></li>
            <li><a href="#testimonials">Testimonials</a></li>
            <li><a href="#contact">Contact</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Resources</h3>
          <ul>
            <li><a href="#">Blog</a></li>
            <li><a href="#">Documentation</a></li>
            <li><a href="#">FAQ</a></li>
            <li><a href="#">Support</a></li>
          </ul>
        </div>
        <div class="footer-section">
          <h3>Legal</h3>
          <ul>
            <li><a href="#">Terms of Service</a></li>
            <li><a href="#">Privacy Policy</a></li>
            <li><a href="#">Cookie Policy</a></li>
            <li><a href="#">GDPR</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-bottom">
        <p>&copy; ${new Date().getFullYear()} ${projectName}. All rights reserved.</p>
      </div>
    </div>
  </footer>

  <script src="script.js"></script>
</body>
</html>`;
}

function generateLandingPageCSS(themeColor: string): string {
  const colors = getThemeColors(themeColor);
  
  return `/* Landing Page Styles */
:root {
  --primary-color: ${colors.primary};
  --secondary-color: ${colors.secondary};
  --accent-color: ${colors.accent};
  --text-color: #333;
  --text-light: #666;
  --background: #fff;
  --background-alt: #f8f9fa;
  --border-color: #e2e8f0;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
}

/* Reset and base styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  overflow-x: hidden;
  scroll-behavior: smooth;
}

a {
  text-decoration: none;
  color: inherit;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  height: auto;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

.section-header {
  text-align: center;
  margin-bottom: 3rem;
}

.section-header h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
  position: relative;
  display: inline-block;
}

.section-header h2::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 50px;
  height: 3px;
  background-color: var(--primary-color);
}

.section-header p {
  color: var(--text-light);
  max-width: 600px;
  margin: 0 auto;
}

/* Button styles */
.btn {
  display: inline-block;
  padding: 0.8rem 1.8rem;
  border-radius: 4px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
  font-size: 1rem;
}

.btn.primary {
  background-color: var(--primary-color);
  color: white;
}

.btn.primary:hover {
  background-color: var(--secondary-color);
}

.btn.outline {
  background-color: transparent;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
}

.btn.outline:hover {
  background-color: var(--primary-color);
  color: white;
}

/* Header styles */
.header {
  background-color: white;
  box-shadow: var(--shadow);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 100;
}

.header-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 70px;
}

.logo h1 {
  font-size: 1.5rem;
  color: var(--primary-color);
}

.nav ul {
  display: flex;
}

.nav ul li {
  margin-left: 1.5rem;
}

.nav ul li a {
  position: relative;
  padding-bottom: 5px;
}

.nav ul li a.active::after,
.nav ul li a:hover::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background-color: var(--primary-color);
}

.menu-toggle {
  display: none;
  flex-direction: column;
  justify-content: space-between;
  width: 30px;
  height: 21px;
  background: transparent;
  border: none;
  cursor: pointer;
}

.menu-toggle span {
  width: 100%;
  height: 3px;
  background-color: var(--text-color);
  transition: all 0.3s ease;
}

/* Hero section */
.hero {
  padding: 10rem 0 5rem;
  background-color: var(--background-alt);
}

.hero .container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
  align-items: center;
}

.hero-content {
  max-width: 600px;
}

.hero h2 {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.hero p {
  font-size: 1.2rem;
  color: var(--text-light);
  margin-bottom: 2rem;
}

.hero-buttons {
  display: flex;
  gap: 1rem;
}

.hero-image img {
  border-radius: 8px;
  box-shadow: var(--shadow-lg);
}

/* Features section */
.features {
  padding: 5rem 0;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
}

.feature-card {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
  text-align: center;
  transition: transform 0.3s ease;
}

.feature-card:hover {
  transform: translateY(-10px);
}

.feature-icon {
  font-size: 2.5rem;
  margin-bottom: 1.5rem;
}

.feature-card h3 {
  margin-bottom: 1rem;
  color: var(--primary-color);
}

.feature-card.custom-feature {
  border-top: 3px solid var(--accent-color);
}

/* About section */
.about {
  padding: 5rem 0;
  background-color: var(--background-alt);
}

.about-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
  align-items: center;
}

.about-text h2 {
  font-size: 2rem;
  margin-bottom: 1.5rem;
  position: relative;
}

.about-text h2::after {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 50px;
  height: 3px;
  background-color: var(--primary-color);
}

.about-text p {
  margin-bottom: 1.5rem;
}

.about-stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.5rem;
  margin-top: 2rem;
}

.stat {
  text-align: center;
}

.stat h3 {
  font-size: 2rem;
  color: var(--primary-color);
}

.about-image img {
  border-radius: 8px;
  box-shadow: var(--shadow-lg);
}

/* Testimonials section */
.testimonials {
  padding: 5rem 0;
}

.testimonials-slider {
  max-width: 800px;
  margin: 0 auto;
  position: relative;
  overflow: hidden;
}

.testimonial {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
  text-align: center;
}

.testimonial-content {
  margin-bottom: 1.5rem;
  font-style: italic;
}

.testimonial-author {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.testimonial-author img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  object-fit: cover;
  margin-bottom: 1rem;
}

.testimonial-author h4 {
  margin-bottom: 0.5rem;
}

.testimonial-author p {
  color: var(--text-light);
  font-size: 0.9rem;
}

.slider-controls {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin-top: 2rem;
}

.slider-control {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: white;
  border: 1px solid var(--border-color);
  cursor: pointer;
  transition: all 0.3s ease;
}

.slider-control:hover {
  background-color: var(--primary-color);
  color: white;
}

/* Contact section */
.contact {
  padding: 5rem 0;
  background-color: var(--background-alt);
}

.contact-content {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 3rem;
}

.contact-form {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-group input,
.form-group textarea {
  width: 100%;
  padding: 0.8rem 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-family: inherit;
  font-size: 1rem;
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: var(--primary-color);
}

.contact-info {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
}

.contact-card {
  background-color: white;
  padding: 1.5rem;
  border-radius: 8px;
  box-shadow: var(--shadow);
  text-align: center;
}

.contact-icon {
  font-size: 2rem;
  margin-bottom: 1rem;
}

.contact-card h3 {
  margin-bottom: 0.5rem;
  color: var(--primary-color);
}

/* CTA section */
.cta {
  padding: 5rem 0;
  background-color: var(--primary-color);
  color: white;
}

.cta-content {
  text-align: center;
  max-width: 800px;
  margin: 0 auto;
}

.cta h2 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
}

.cta p {
  margin-bottom: 2rem;
  font-size: 1.2rem;
}

.cta .btn.primary {
  background-color: white;
  color: var(--primary-color);
}

.cta .btn.primary:hover {
  background-color: var(--background-alt);
}

/* Footer */
.footer {
  background-color: #2d3748;
  color: #cbd5e0;
  padding-top: 4rem;
}

.footer-content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
  padding-bottom: 3rem;
}

.footer-section h3 {
  color: white;
  font-size: 1.2rem;
  margin-bottom: 1.5rem;
  position: relative;
  display: inline-block;
}

.footer-section h3::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -5px;
  width: 30px;
  height: 2px;
  background-color: var(--primary-color);
}

.footer-section p {
  margin-bottom: 1.5rem;
}

.footer-section ul li {
  margin-bottom: 0.7rem;
}

.footer-section ul li a:hover {
  color: white;
}

.social-links {
  display: flex;
  gap: 0.5rem;
}

.social-link {
  display: inline-block;
  padding: 0.5rem 1rem;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
  transition: all 0.3s ease;
}

.social-link:hover {
  background-color: var(--primary-color);
  color: white;
}

.footer-bottom {
  text-align: center;
  padding: 1.5rem 0;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  font-size: 0.9rem;
}

/* Responsive styles */
@media (max-width: 992px) {
  .hero h2 {
    font-size: 2.5rem;
  }
  
  .about-content,
  .contact-content,
  .hero .container {
    grid-template-columns: 1fr;
  }
  
  .hero-content {
    text-align: center;
    margin: 0 auto;
  }
  
  .hero-buttons {
    justify-content: center;
  }
  
  .about-text {
    order: 2;
  }
  
  .about-image {
    order: 1;
    margin-bottom: 2rem;
  }
  
  .about-text h2::after {
    left: 50%;
    transform: translateX(-50%);
  }
  
  .about-text {
    text-align: center;
  }
}

@media (max-width: 768px) {
  .nav ul {
    display: none;
  }
  
  .menu-toggle {
    display: flex;
  }
  
  .nav.active ul {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 70px;
    left: 0;
    width: 100%;
    background-color: white;
    padding: 1rem 0;
    box-shadow: var(--shadow);
  }
  
  .nav.active ul li {
    margin: 0;
    text-align: center;
  }
  
  .nav.active ul li a {
    display: block;
    padding: 0.8rem 0;
  }
  
  .hero {
    padding-top: 8rem;
  }
}

@media (max-width: 576px) {
  .section-header h2,
  .about-text h2,
  .cta h2 {
    font-size: 1.8rem;
  }
  
  .hero h2 {
    font-size: 2rem;
  }
  
  .hero-buttons {
    flex-direction: column;
    gap: 1rem;
  }
  
  .btn {
    width: 100%;
    text-align: center;
  }
  
  .about-stats {
    grid-template-columns: 1fr;
  }
  
  .contact-info {
    grid-template-columns: 1fr;
  }
}`;
}

function generateLandingPageJS(requirements: ProjectRequirement): string {
  return `// Landing Page JavaScript

// Sample testimonials data (in a real app, this might come from a CMS or API)
const testimonials = [
  {
    content: "This product has completely transformed how we operate. The features are exactly what we needed, and the support team is exceptional.",
    author: "John Smith",
    position: "CEO, TechCorp",
    image: "https://via.placeholder.com/60"
  },
  {
    content: "I've tried many similar solutions, but this one stands out by far. The user interface is intuitive, and it has saved us countless hours of work.",
    author: "Sarah Johnson",
    position: "Marketing Director, Innovate Inc.",
    image: "https://via.placeholder.com/60"
  },
  {
    content: "Implementing this solution was one of the best decisions we've made this year. The ROI has been incredible, and our team loves using it.",
    author: "Michael Brown",
    position: "CTO, FutureTech",
    image: "https://via.placeholder.com/60"
  }
];

// Initialize the landing page
document.addEventListener('DOMContentLoaded', () => {
  // Set up event listeners
  setupEventListeners();
  
  // Initialize testimonials slider
  initTestimonialsSlider();
  
  // Smooth scrolling for navigation links
  setupSmoothScrolling();
  
  // Animate sections on scroll
  setupScrollAnimations();
});

// Set up event listeners
function setupEventListeners() {
  // Mobile menu toggle
  const menuToggle = document.getElementById('menu-toggle');
  const nav = document.querySelector('.nav');
  
  if (menuToggle && nav) {
    menuToggle.addEventListener('click', () => {
      nav.classList.toggle('active');
    });
  }
  
  // Close mobile menu when a link is clicked
  const navLinks = document.querySelectorAll('.nav a');
  navLinks.forEach(link => {
    link.addEventListener('click', () => {
      nav.classList.remove('active');
    });
  });
  
  // Form submission
  const contactForm = document.getElementById('contact-form');
  if (contactForm) {
    contactForm.addEventListener('submit', (e) => {
      e.preventDefault();
      
      // In a real app, you'd send the form data to a backend API
      alert('Thank you for your message! We will get back to you shortly.');
      contactForm.reset();
    });
  }
}

// Initialize testimonials slider
function initTestimonialsSlider() {
  const slider = document.getElementById('testimonials-slider');
  const prevBtn = document.getElementById('prev-testimonial');
  const nextBtn = document.getElementById('next-testimonial');
  
  if (slider) {
    let currentSlide = 0;
    
    // Create testimonial slides
    testimonials.forEach((testimonial, index) => {
      const slide = document.createElement('div');
      slide.className = 'testimonial';
      slide.style.display = index === 0 ? 'block' : 'none';
      
      slide.innerHTML = \`
        <div class="testimonial-content">
          <p>"\${testimonial.content}"</p>
        </div>
        <div class="testimonial-author">
          <img src="\${testimonial.image}" alt="\${testimonial.author}">
          <h4>\${testimonial.author}</h4>
          <p>\${testimonial.position}</p>
        </div>
      \`;
      
      slider.appendChild(slide);
    });
    
    // Slider controls
    if (prevBtn && nextBtn) {
      prevBtn.addEventListener('click', () => {
        changeSlide(-1);
      });
      
      nextBtn.addEventListener('click', () => {
        changeSlide(1);
      });
    }
    
    // Change slide function
    function changeSlide(direction) {
      const slides = slider.querySelectorAll('.testimonial');
      
      slides[currentSlide].style.display = 'none';
      
      currentSlide = (currentSlide + direction + slides.length) % slides.length;
      
      slides[currentSlide].style.display = 'block';
    }
    
    // Auto-rotate slides every 5 seconds
    setInterval(() => {
      changeSlide(1);
    }, 5000);
  }
}

// Set up smooth scrolling for navigation links
function setupSmoothScrolling() {
  const links = document.querySelectorAll('a[href^="#"]');
  
  links.forEach(link => {
    link.addEventListener('click', function(e) {
      e.preventDefault();
      
      const targetId = this.getAttribute('href');
      const targetElement = document.querySelector(targetId);
      
      if (targetElement) {
        const headerHeight = document.querySelector('.header').offsetHeight;
        const targetPosition = targetElement.offsetTop - headerHeight;
        
        window.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
        });
      }
    });
  });
}

// Set up scroll animations
function setupScrollAnimations() {
  // In a real app, you might use a library like AOS (Animate On Scroll)
  // For this simple example, we'll just add a class to elements when they come into view
  
  const sections = document.querySelectorAll('section');
  
  function checkScroll() {
    sections.forEach(section => {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.clientHeight;
      const windowHeight = window.innerHeight;
      const scrollY = window.scrollY;
      
      if (scrollY > sectionTop - windowHeight + sectionHeight / 3) {
        section.classList.add('animated');
      }
    });
  }
  
  // Initial check
  checkScroll();
  
  // Check on scroll
  window.addEventListener('scroll', checkScroll);
}

// Update navigation active state based on scroll position
window.addEventListener('scroll', () => {
  const sections = document.querySelectorAll('section');
  const navLinks = document.querySelectorAll('.nav a');
  
  let current = '';
  
  sections.forEach(section => {
    const sectionTop = section.offsetTop;
    const sectionHeight = section.clientHeight;
    const headerHeight = document.querySelector('.header').offsetHeight;
    
    if (window.scrollY >= sectionTop - headerHeight - 10) {
      current = section.getAttribute('id');
    }
  });
  
  navLinks.forEach(link => {
    link.classList.remove('active');
    if (link.getAttribute('href') === \`#\${current}\`) {
      link.classList.add('active');
    }
  });
});

// Implement features based on requirements
${requirements.features?.length > 0 ? `
// Custom features implementation
const features = ${JSON.stringify(requirements.features)};

features.forEach(feature => {
  console.log(\`Implementing landing page feature: \${feature}\`);
  // In a real app, each feature would have its own implementation
});
` : '// No custom features specified'}`;
}

// Fallback generators
function generateFallbackProject(requirements: ProjectRequirement): Promise<GeneratedProject> {
  return Promise.resolve({
    id: `fallback-${Date.now()}`,
    name: requirements.projectName || "Fallback Project",
    description: requirements.description || "A simple fallback project",
    codeSnippets: {
      frontend: "<html><body><h1>Fallback Project</h1><p>Please try again later.</p></body></html>",
      backend: "console.log('Fallback project');"
    },
    techStack: requirements.techStack || ["HTML", "CSS", "JavaScript"],
    structure: {
      frontend: ["index.html", "styles.css", "script.js"],
      backend: []
    }
  });
}
